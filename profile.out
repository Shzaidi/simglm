sample.interval=20000
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique factor as.factor tapply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .getMethodsTable as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lapply unlist unique simplify2array sapply model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.name getNamespace .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
double logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.cacheGeneric .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.double pdFactor.pdNatural pdFactor array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
%in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Names pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdFactor.pdNatural FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist simplify2array sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diff.default diff FUN lapply MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
dim.data.frame dim as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
terms standardGeneric terms sim.pow.nested FUN lapply sapply replicate 
standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.cacheGeneric .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
parent.frame tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is.factor unique.default unique asOneFormula lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diff FUN lapply MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.default solve t qr solve.pdLogChol FUN lapply solve.reStruct solve lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.vector as.data.frame.matrix as.data.frame data.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getClassDef is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix solve.default solve lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
is.data.frame colnames solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
row.names as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match.fun lapply MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
parent.frame tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.vector as.data.frame.matrix as.data.frame data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rev fitted.lmeStruct fitted lme.formula lme sim.pow.nested FUN lapply sapply replicate 
model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.double pdFactor.pdNatural pdFactor array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
<Anonymous> [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .getMethodsTable FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sort.list factor table getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.double pdFactor.pdNatural FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse mode match %in% deparse paste force as.data.frame.factor as.data.frame data.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique.default unique matrix MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
options match %in% getOption mvrnorm matrix err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
t matrix data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
data.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rownames<- lme.formula lme sim.pow.nested FUN lapply sapply replicate 
summary.lme summary sim.pow.nested FUN lapply sapply replicate 
getClassDef .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
dim ncol eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique simplify2array sapply diag solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
parse eval formula formula.character formula as.formula lme sim.pow.nested FUN lapply sapply replicate 
terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels.default levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef.pdMat NextMethod coef.pdNatural FUN lapply unlist coef.reStruct FUN lapply unlist coef.modelStruct coef lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
all.vars FUN lapply unlist allVarsRec unique asOneFormula lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.data.frame as.list lapply sapply model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
<Anonymous> [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
parse eval asOneFormula lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
parse eval asOneFormula lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lapply MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
formula as.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
dim.data.frame dim ncol eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
::: match.fun lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.cacheGenericTable .cacheGeneric .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist array MEdecomp lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length length pdFactor.pdNatural pdFactor array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
exists .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array MEdecomp lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length length pdFactor.pdNatural FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .getMethodsTable FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
simplify2array sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
is.data.frame colnames<- solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
deparse eval match.arg table getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.row_names_info dim.data.frame dim ncol eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist array MEdecomp lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
environment doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique simplify2array sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
environment doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdConstruct matrix<-.pdMat matrix<- FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
$ logLik.lme logLik summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
packageSlot .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdFactor.pdNatural FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
row.names.data.frame row.names as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
NextMethod coef.pdNatural FUN lapply unlist coef.reStruct FUN lapply unlist coef.modelStruct coef lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.row_names_info dim.data.frame dim ncol eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
formals match.arg lme.formula lme sim.pow.nested FUN lapply sapply replicate 
list eval eval model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix solve.default solve t MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
<Anonymous> [[.data.frame [[ model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list lapply solve.reStruct solve lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
colnames<- fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getMethodsTable FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<- solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
deparse eval match.arg sort.list factor split.default split lapply tapply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<- coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
dim as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
$<-.data.frame $<- sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
assign loadMethod loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
formula pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct pdMat FUN lapply reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
row.names array lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadMethod %*% %*% as.matrix data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
unlist matrix model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pmatch .deparseOpts deparse paste FUN lapply sapply model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.cacheGenericTable .cacheGeneric .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% [[.data.frame [[ model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[<-.data.frame [<- summary.lme summary sim.pow.nested FUN lapply sapply replicate 
getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lapply sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.name getNamespace .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sim.pow.nested FUN lapply sapply replicate 
.classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
<Anonymous> [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .getMethodsTable FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ifelse pmax formatC paste quantile.default quantile summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
options match %in% getOption mvrnorm matrix err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
names<- lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
paste force as.data.frame.numeric as.data.frame data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
data.class all.equal.numeric all.equal isSymmetric.matrix eigen lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getNamespace .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag mvrnorm rand.eff.sim sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
factor [.factor [ FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.double pdFactor.pdNatural pdFactor array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length length Dim.pdNatural Dim pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match.fun lapply formula.modelStruct formula allVarsRec unique asOneFormula lme.formula lme sim.pow.nested FUN lapply sapply replicate 
aperm apply MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClass asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist matrix model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
Names pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct pdMat FUN lapply reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
colnames array lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ifelse matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.sigLabel .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
%in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
parent.frame tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lapply sapply diag solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
outer Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along match [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure unlist array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
$<-.data.frame $<- sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
mode match %in% deparse paste FUN lapply sapply model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<- solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
double FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t chol pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getClassDef is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
simplify2array sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t chol pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix chol.default chol pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
lme sim.pow.nested FUN lapply sapply replicate 
terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve lme.formula lme sim.pow.nested FUN lapply sapply replicate 
options match %in% getOption mvrnorm matrix err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.double pdFactor.pdNatural FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
model.matrix.default model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval formula.pdMat formula pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
unlist matrix model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.deparseOpts deparse paste FUN lapply sapply model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.name getNamespace .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist array MEdecomp lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
qr.default qr solve.pdLogChol FUN lapply solve.reStruct solve lme.formula lme sim.pow.nested FUN lapply sapply replicate 
model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ifelse solve.default solve t qr solve.pdLogChol FUN lapply solve.reStruct solve lme.formula lme sim.pow.nested FUN lapply sapply replicate 
terms.formula terms standardGeneric terms sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
terms model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getClassDef is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length pdFactor.pdNatural FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized coef<-.pdMat coef<- solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique.default unique factor split.default split lapply Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
structure .POSIXct Sys.time srcfilecopy parse eval formula formula.character formula as.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN lapply sapply model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
do.call asOneSidedFormula splitFormula splitFormula getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.vector as.data.frame.matrix as.data.frame data.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.cacheGenericTable .cacheGeneric .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rev eigen lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat isInitialized Dim.pdSymm Dim matrix<-.pdMat matrix<- MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
do.call MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdNatural lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
data.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.name getNamespace .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat isInitialized Dim.pdNatural Dim pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getClass asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
makepredictcall model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ifelse pmax formatC paste quantile.default quantile summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
options match %in% getOption mvrnorm rand.eff.sim sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
cbind fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
naresid residuals.lme resid standardGeneric resid summary.lme summary sim.pow.nested FUN lapply sapply replicate 
asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
all.equal.character attr.all.equal all.equal.list all.equal attr.all.equal all.equal.numeric all.equal isSymmetric.matrix eigen lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getNamespace .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.data.frame data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<- coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadMethod loadMethod standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
mostattributes<- pmax do.call MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
row.names as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
stopifnot srcfilecopy parse eval formula formula.character formula as.formula reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEdecomp lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.list lapply sapply model.frame.default model.frame standardGeneric model.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique.default unique simplify2array sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
<Anonymous> [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diff MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
apply split lapply Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.default as.list data.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
data.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
resid summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getClass asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
packageSlot .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length length Dim.pdSymm Dim matrix<-.pdMat matrix<- MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getNamespace .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match residuals.lme resid standardGeneric resid summary.lme summary sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getClassDef is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN lapply unlist coef.reStruct FUN lapply unlist coef.modelStruct coef lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.double pdFactor.pdNatural pdFactor array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
matrix<- FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
deparse data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
dim as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.reStruct logLik recalc.reStruct recalc recalc.modelStruct recalc MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lapply unlist unique simplify2array sapply model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdNatural lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t.default t mvrnorm matrix err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
quantile.default quantile summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique factor table getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length [.data.frame [ na.omit.data.frame na.omit model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
%in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .getMethodsTable FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
factor as.factor FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix solve.default solve t MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<- solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.default as.list as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diff.default diff FUN lapply MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
$ solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
dim.data.frame dim ncol eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
makepredictcall.default makepredictcall model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
varWeights lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% [.data.frame [ na.omit.data.frame na.omit model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
outer Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.default solve t MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array MEdecomp lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
is.factor table getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels.default levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diff MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t apply MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array MEdecomp lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdFactor.pdNatural pdFactor array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
== eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getClassDef is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rev.default rev getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
structure .POSIXct Sys.time srcfilecopy parse eval formula formula.character formula as.formula reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ eval lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.default as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getClassDef is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.row_names_info dim.data.frame dim ncol eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdFactor array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.double pdFactor.pdNatural pdFactor array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% deparse paste FUN lapply sapply model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.double pdFactor.pdNatural FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
c pmatch .deparseOpts deparse model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply sapply model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
- deparse mode asOneSidedFormula Names pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdNatural lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getClassDef is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match factor unique.default unique factor [.factor [ FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.reStruct logLik recalc.reStruct recalc recalc.modelStruct recalc MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN lapply do.call cbind fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
packageSlot .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique matrix MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.vector as.data.frame.matrix as.data.frame data.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.data.frame data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
length as.data.frame.factor as.data.frame data.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
fitted.lmeStruct fitted lme.formula lme sim.pow.nested FUN lapply sapply replicate 
na.omit model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv as as.matrix.Matrix as.matrix data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getGroupsFormula.default getGroupsFormula getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat isInitialized Dim.pdNatural Dim pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
dim.data.frame dim ncol eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.character.factor FUN FUN lapply unlist array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getClassDef is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getClassDef is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
Names.formula Names pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct pdMat FUN lapply reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
getOption model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
make.names data.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getNamespace .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
unlist getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.data.frame data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
match %in% [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.reStruct logLik recalc.reStruct recalc recalc.modelStruct recalc MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ na.omit.data.frame na.omit model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist unique simplify2array sapply diag solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
do.call order lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.default solve t qr solve.pdLogChol FUN lapply solve.reStruct solve lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated.default anyDuplicated as.data.frame.numeric as.data.frame data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
model.frame.default model.frame standardGeneric model.frame model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eigen mvrnorm rand.eff.sim sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated.default anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
list eval eval model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
matrix MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
summary.lme summary sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
packageSlot .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
chol.default chol pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.reStruct logLik recalc.reStruct recalc recalc.modelStruct recalc MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% [[.data.frame [[ model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
$<-.data.frame $<- sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse paste FUN lapply sapply model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Dim pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length na.omit.data.frame na.omit model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length length pdFactor.pdLogChol FUN lapply unlist pdFactor.reStruct pdFactor logLik.reStruct logLik recalc.reStruct recalc recalc.modelStruct recalc MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list lapply sapply model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdFactor.pdNatural pdFactor array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist matrix model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdMatrix lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length data.frame data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
paste FUN vapply blank.chars formatC paste quantile.default quantile summary.lme summary sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist simplify2array sapply diag summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix summary.lme summary sim.pow.nested FUN lapply sapply replicate 
possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
options match %in% getOption mvrnorm rand.eff.sim sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist unique simplify2array sapply diag solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.deparseOpts deparse eval match.arg sort.list factor split.default split lapply tapply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
resid standardGeneric resid summary.lme summary sim.pow.nested FUN lapply sapply replicate 
get .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
qnorm sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .cacheGenericTable .cacheGeneric .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
qr.default qr solve.pdLogChol FUN lapply solve.reStruct solve lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.default as.list data.frame data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadMethod loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
dim [.data.frame [ lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique.default unique simplify2array sapply model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.class1 as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.list lapply sapply model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
is.factor unique.default unique factor getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdFactor.pdNatural pdFactor array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
make.names data.frame data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .cacheGenericTable .cacheGeneric .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is asMethod as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.list formula.reStruct formula model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
require err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getMethodsTable as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist needUpdate.modelStruct needUpdate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lme.formula lme sim.pow.nested FUN lapply sapply replicate 
fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.default as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match.fun vapply pmax diag mvrnorm rand.eff.sim sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.cacheGenericTable .cacheGeneric .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN lapply unlist pdFactor.reStruct pdFactor unlist MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rev eigen mvrnorm rand.eff.sim sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.cacheGenericTable .cacheGeneric .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
assign loadMethod loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.double pdFactor.pdNatural FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
dim ncol eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
parent.frame tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized coef<-.pdMat coef<- coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sys.call match %in% [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
parent.frame tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
rev reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat isInitialized coef<-.pdMat coef<- solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
get .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClass asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
$ solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.reStruct logLik recalc.reStruct recalc recalc.modelStruct recalc MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.data.frame as.list lapply sapply model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
assign loadMethod loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
structure .POSIXct Sys.time srcfilecopy parse eval asOneFormula model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<- solve.pdLogChol FUN lapply solve.reStruct solve lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq.default seq quantile.default quantile summary.lme summary sim.pow.nested FUN lapply sapply replicate 
isS4 is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
dim as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .cacheGenericTable .cacheGeneric .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
rev.default rev getGroupsFormula.reStruct getGroupsFormula lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rev MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[.data.frame [[ [.data.frame [ lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist simplify2array sapply model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match factor [.factor [ FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
mode match %in% deparse data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getMethodsTable FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[<- solve.reStruct solve lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.vector as.data.frame.matrix as.data.frame data.frame data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat isInitialized coef<-.pdMat coef<- solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list formula.reStruct formula model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
fitted.lmeStruct fitted lme.formula lme sim.pow.nested FUN lapply sapply replicate 
data.frame data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
parent.frame eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
tapply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
cbind do.call solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
dim.data.frame dim ncol eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.row_names_info $<-.data.frame $<- sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
terms model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list lapply unlist array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
environment doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique simplify2array sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
<Anonymous> [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN lapply unlist array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% [.data.frame [ pt summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match.fun lapply sapply model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
levels [.factor [ FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
dim ncol eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .cacheGenericTable .cacheGeneric .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
exists .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rev array MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.row_names_info dim.data.frame dim as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[<-.data.frame [<- summary.lme summary sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getClass asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rev getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
environment terms.formula terms standardGeneric terms sim.pow.nested FUN lapply sapply replicate 
terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique.default unique sort.int sort.default sort quantile.default quantile summary.lme summary sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
nrow MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
NextMethod [.factor [ [.data.frame [ lme.formula lme sim.pow.nested FUN lapply sapply replicate 
terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.cacheGenericTable .cacheGeneric .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels.default FUN lapply unique unlist array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
deparse mode asOneSidedFormula Names pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdNatural lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rev eigen mvrnorm matrix err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.pdMat coef<- solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
new.env srcfilecopy parse eval formula formula.character formula as.formula reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
assign loadMethod loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
%in% [[.data.frame [[ na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[<- lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
do.call asOneSidedFormula splitFormula getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.default as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.list getGroupsFormula.default getGroupsFormula reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist matrix model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN lapply do.call sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
factor as.factor FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[ unique matrix MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lapply unlist order [<-.data.frame [<- summary.lme summary sim.pow.nested FUN lapply sapply replicate 
.cacheGenericTable .cacheGeneric .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rownames<- solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length length pdFactor.pdNatural FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdFactor.pdLogChol FUN lapply unlist pdFactor.reStruct pdFactor unlist MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.default as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
assign loadMethod loadMethod standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
simplify2array sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv %*% %*% %*% as.matrix data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
model.frame.default model.frame standardGeneric model.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t mvrnorm rand.eff.sim sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
formula rev getGroupsFormula.reStruct getGroupsFormula lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lapply sapply diag solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
<Anonymous> [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC checkSlotAssignment slot<- @<- .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
assign loadMethod loadMethod standardGeneric model.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdFactor.pdLogChol pdFactor array pdMatrix.pdSymm pdMatrix crossprod pdMatrix.pdMat NextMethod pdMatrix.pdSymm pdMatrix as.matrix.pdMat as.matrix pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdNatural lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rnorm FUN lapply do.call cbind fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .cacheGenericTable .cacheGeneric .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste FUN lapply sapply model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
summary.lme summary sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
formula pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[<-.data.frame [<- summary.lme summary sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat isInitialized FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ isInitialized FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ifelse fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
anyDuplicated.default anyDuplicated data.row.names data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
matrix model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
packageSlot .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist array MEdecomp lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lapply unlist unique simplify2array sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.identC as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval formula.pdMat formula pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdNatural lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
$<-.data.frame $<- sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
unlist matrix model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
cbind data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply unlist .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
sys.call match %in% [[.data.frame [[ [.data.frame [ na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
data.frame data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
assign loadMethod loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadMethod standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat isInitialized pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdNatural lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
length dim.data.frame dim nrow lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t svd pdMatrix.pdSymm pdMatrix crossprod pdMatrix.pdMat NextMethod pdMatrix.pdSymm pdMatrix lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
elNamed checkSlotAssignment slot<- @<- .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
length eval FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
outer as.vector matrix MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag mvrnorm matrix err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply unlist .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
factor as.factor FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Dim pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
<Anonymous> [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
<Anonymous> [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste paste parse eval asOneFormula lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diff.default diff FUN lapply MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.row_names_info dim.data.frame dim as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
standardGeneric terms sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match.fun lapply sapply model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ifelse solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.name getNamespace .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat isInitialized pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
apply split lapply Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getGroupsFormula reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lapply unlist lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length length solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rnorm matrix mvrnorm matrix err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClass asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
order do.call order lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized coef<-.pdMat coef<- coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
dim ncol eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
unlist simplify2array sapply lmeStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
paste FUN lapply sapply model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
make.names data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
names as.data.frame.factor as.data.frame data.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
fitted.lmeStruct fitted lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique simplify2array sapply model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
<Anonymous> model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sort.int sort.default sort quantile.default quantile summary.lme summary sim.pow.nested FUN lapply sapply replicate 
get .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length dim.data.frame dim dimnames<-.data.frame dimnames<- summary.lme summary sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% [<-.data.frame [<- summary.lme summary sim.pow.nested FUN lapply sapply replicate 
as.name getNamespace asNamespace get ::: match.fun lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist coef.reStruct FUN lapply unlist coef.modelStruct coef nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Dim.pdNatural Dim pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv %*% %*% %*% as.matrix data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
unlist matrix model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
row.names.data.frame row.names lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
colnames solve.default solve lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rep.int outer Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.pdMat coef<- solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique asOneFormula form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match.fun lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.row_names_info dim.data.frame dim as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
parse eval formula formula.character formula as.formula reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique simplify2array sapply model.matrix.default model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[.data.frame [[ [.data.frame [ na.omit.data.frame na.omit model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
factor unique.default unique factor [.factor [ FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
factor unique.default unique factor [.factor [ FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
factor unique.default unique factor [.factor [ FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
factor unique.default unique factor [.factor [ FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
$ sim.pow.nested FUN lapply sapply replicate 
.classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN lapply do.call cbind fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClass asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .getMethodsTable FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
nobs BIC.logLik BIC standardGeneric BIC summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
isS4 is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
dim as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
offsets MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.data.frame.numeric as.data.frame data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
get .cacheGenericTable .cacheGeneric .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
all.equal.numeric all.equal all.equal.list all.equal attr.all.equal all.equal.numeric all.equal isSymmetric.matrix eigen lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
exists .getMethodsTable as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
assign loadMethod loadMethod standardGeneric terms sim.pow.nested FUN lapply sapply replicate 
FUN lapply sapply match model.matrix.default model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
chol.default chol pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
%in% as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match.fun lapply unlist unique simplify2array sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.cacheGenericTable .cacheGeneric .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
factor table getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.deparseOpts deparse mode match %in% deparse paste force as.data.frame.numeric as.data.frame data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat isInitialized Dim.pdNatural Dim pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.class1 as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
%in% [.data.frame [ lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.default solve t qr solve.pdLogChol FUN lapply solve.reStruct solve lme.formula lme sim.pow.nested FUN lapply sapply replicate 
mode as.data.frame.matrix as.data.frame data.frame data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
port_msg nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.vector as.data.frame.matrix as.data.frame data.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list data.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ unique matrix MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
na.omit.data.frame na.omit model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.default as.list lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
deparse mode asOneSidedFormula Names pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist unique simplify2array sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.integer table getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
== eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
%in% .requirePackage .classEnv asMethod as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
unlist matrix model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% [[.data.frame [[ [.data.frame [ na.omit.data.frame na.omit model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[<- solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.row_names_info dim.data.frame dim as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
aperm apply MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
mode as.data.frame.matrix as.data.frame data.frame data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.default solve t MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
AIC.logLik AIC standardGeneric AIC summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
getClassDef is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels.default levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix chol.default chol pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
residuals.lme resid standardGeneric resid summary.lme summary sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
dim.data.frame dim ncol eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pmax do.call MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClass asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
terms.formula terms model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.reStruct logLik recalc.reStruct recalc recalc.modelStruct recalc MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ na.omit.data.frame na.omit model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
: eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
aperm.default aperm apply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.data.frame as.list lapply sapply model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.data.frame as.list lapply sapply model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.data.frame as.list lapply sapply model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.data.frame as.list lapply sapply model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist simplify2array sapply diag solve.pdLogChol FUN lapply solve.reStruct solve lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste sim.pow.nested FUN lapply sapply replicate 
sys.call match %in% [[.data.frame [[ [.data.frame [ na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length length solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
row.names.data.frame row.names as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste FUN lapply sapply model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
packageSlot .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
pmatch .deparseOpts deparse FUN lapply unlist getGroupsFormula.default getGroupsFormula reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN lapply sapply match model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Names.formula Names pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdNatural lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
%in% [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse paste FUN lapply sapply model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
length na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isNamespace asNamespace get ::: match.fun lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
is.data.frame colnames<- solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length dim.data.frame dim as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized coef<-.pdMat coef<- solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<- solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rand.eff.sim sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
data.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.cacheGeneric .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique simplify2array sapply diag solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClass asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
%in% as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
parse eval asOneFormula lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval match.arg sort.list factor getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.cacheGenericTable .cacheGeneric .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply unlist .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
vapply pmax diag mvrnorm matrix err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
unlist data.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .cacheGenericTable .cacheGeneric .getGeneric getGeneric as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
lapply sapply model.frame.default model.frame standardGeneric model.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t chol pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdNatural lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
parse eval asOneFormula model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Dim pdMatrix.pdSymm pdMatrix crossprod pdMatrix.pdMat NextMethod pdMatrix.pdSymm pdMatrix lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.cacheGeneric .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
terms standardGeneric terms sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is.factor unique.default unique asOneFormula lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sys.function formals match.arg sort.list factor getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length length Dim.pdSymm Dim pdMatrix.pdSymm pdMatrix crossprod pdMatrix.pdMat NextMethod pdMatrix.pdSymm pdMatrix as.matrix.pdMat as.matrix pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdNatural lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
<Anonymous> [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
%in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is .findMethodInTable .quickCoerceSelect as as.matrix.Matrix as.matrix data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match.fun lapply sapply model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist unique simplify2array sapply model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
%in% .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ coef<-.reStruct coef<- coef<-.modelStruct coef<- lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
exists .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sys.call match %in% [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
simplify2array sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sys.call match %in% [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
terms.formula terms model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eigen lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
packageSlot .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist array MEdecomp lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
is.factor unique.default unique simplify2array sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sys.call match %in% [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist array MEdecomp lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
apply MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
%*% %*% %*% as.matrix data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
lapply unlist unique simplify2array sapply model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique simplify2array sapply diag solve.pdLogChol FUN lapply solve.reStruct solve lme.formula lme sim.pow.nested FUN lapply sapply replicate 
data.frame data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique.default unique matrix MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
eval getCovariateFormula reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.data.frame as.list lapply sapply model.matrix.default model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
is.data.frame rownames<- lme.formula lme sim.pow.nested FUN lapply sapply replicate 
%*% data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
environment exists .getMethodsTable as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.environment exists .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
summary.lme summary sim.pow.nested FUN lapply sapply replicate 
subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
seq_along structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getMethodsTable as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdFactor unlist MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
apply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
srcfilecopy parse eval formula formula.character formula as.formula lme sim.pow.nested FUN lapply sapply replicate 
names model.matrix.default model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pmatch .deparseOpts deparse mode match %in% deparse paste force as.data.frame.numeric as.data.frame data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<- lme.formula lme sim.pow.nested FUN lapply sapply replicate 
options getOption model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match.fun sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t chol pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
row.names.data.frame row.names as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .cacheGenericTable .cacheGeneric .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
[.factor [ FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list lapply unlist needUpdate.modelStruct needUpdate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
standardGeneric terms sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.reStruct logLik recalc.reStruct recalc recalc.modelStruct recalc MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length data.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
paste FUN vapply blank.chars formatC paste quantile.default quantile summary.lme summary sim.pow.nested FUN lapply sapply replicate 
exists .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
$ as.matrix diag summary.lme summary sim.pow.nested FUN lapply sapply replicate 
isS4 is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<- solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.cacheGenericTable .cacheGeneric .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array MEdecomp lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ncol solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat isInitialized Dim.pdSymm Dim matrix<-.pdMat matrix<- MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
is.qr solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
$<-.data.frame $<- sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match.fun lapply sapply model.frame.default model.frame standardGeneric model.frame model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.name getNamespace .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
asOneSidedFormula Names pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lapply sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<- solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist pdFactor.reStruct pdFactor unlist MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rownames<- solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
lapply unlist .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rnorm matrix mvrnorm rand.eff.sim sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getMethodsTable FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
dim.data.frame dim as.matrix.data.frame as.matrix summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist array MEdecomp lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
asNamespace get ::: match.fun lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
chol.default chol pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
[[.data.frame [[ model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Dim.pdNatural Dim pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
packageSlot .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sqrt pdFactor.pdNatural FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getClassDef .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix La.svd svd pdMatrix.pdSymm pdMatrix crossprod pdMatrix.pdMat NextMethod pdMatrix.pdSymm pdMatrix as.matrix.pdMat as.matrix pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdNatural lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.vector as.data.frame.matrix as.data.frame data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list data.frame data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply unlist .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
options match %in% getOption mvrnorm rand.eff.sim sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.name getNamespace .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match factor as.factor FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
[[.data.frame [[ model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.name getNamespace .requirePackage .classEnv %*% %*% %*% as.matrix data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is.data.frame terms.formula terms model.frame.default model.frame standardGeneric model.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
NextMethod pdMatrix.pdSymm pdMatrix as.matrix.pdMat as.matrix pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdNatural lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rnorm matrix mvrnorm rand.eff.sim sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
double FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.default as.list as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array diag solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array diag solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array diag solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array diag solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
%in% deparse model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getNamespace .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag mvrnorm rand.eff.sim sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.deparseOpts deparse FUN lapply unlist getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix solve.default solve t MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix eigen mvrnorm rand.eff.sim sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rev MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% deparse paste FUN lapply sapply model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized.pdMat isInitialized coef<-.pdMat coef<- solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
%in% [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getClassDef is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
%in% [[.data.frame [[ model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist matrix model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized coef<-.pdMat coef<- coef<-.reStruct coef<- coef<-.modelStruct coef<- lme.formula lme sim.pow.nested FUN lapply sapply replicate 
residuals.lme resid standardGeneric resid summary.lme summary sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rev.default rev rev MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
== eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
deparse eval match.arg sort.list factor as.factor tapply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.row_names_info dim.data.frame dim ncol eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is.factor unique.default unique pdMat FUN lapply reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.deparseOpts FUN lapply sapply match model.matrix.default model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.vector as.data.frame.matrix as.data.frame data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
unlist matrix model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array diag solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized.pdMat isInitialized pdMatrix.pdMat NextMethod pdMatrix.pdSymm pdMatrix lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.row_names_info data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
unlist matrix model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ifelse solve.default solve t MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
options match %in% getOption mvrnorm matrix err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadMethod loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
%in% deparse paste FUN lapply sapply model.frame.default model.frame standardGeneric model.frame model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.cacheGenericTable .cacheGeneric .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
row.names.data.frame row.names as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getClassDef is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
$ solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
stopifnot srcfilecopy parse eval formula formula.character formula as.formula reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.data.frame as.list lapply sapply model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique.default unique simplify2array sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
row.names.data.frame row.names as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
$ solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated data.frame data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match.fun lapply reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length dim.data.frame dim ncol lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Dim pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
terms.formula terms standardGeneric terms sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% deparse array lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eigen lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
%in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array MEdecomp lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.name getNamespace .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along rev recalc.modelStruct recalc MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list data.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
assign loadMethod loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
vapply pmax pmax formatC paste quantile.default quantile summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .getMethodsTable FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix chol.default chol pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diff MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
La.svd svd pdMatrix.pdSymm pdMatrix crossprod pdMatrix.pdMat NextMethod pdMatrix.pdSymm pdMatrix as.matrix.pdMat as.matrix pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdNatural lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
unlist .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique.default unique sort.int sort.default sort quantile.default quantile summary.lme summary sim.pow.nested FUN lapply sapply replicate 
try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
na.omit model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
NextMethod pdMatrix.pdSymm pdMatrix lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
options match %in% getOption mvrnorm matrix err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getClass asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply unlist .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
packageSlot .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClass asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.identC as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length dim.data.frame dim ncol eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.deparseOpts deparse mode match %in% deparse data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
needUpdate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
matrix La.svd svd pdMatrix.pdSymm pdMatrix solve t qr solve.pdLogChol FUN lapply solve.reStruct solve lme.formula lme sim.pow.nested FUN lapply sapply replicate 
vapply pmax diag mvrnorm matrix err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getNamespace .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
factor as.factor FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Names matrix MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN lapply unlist unique simplify2array sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated.default anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
isS4 is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
$ solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized solve.pdLogChol FUN lapply solve.reStruct solve lme.formula lme sim.pow.nested FUN lapply sapply replicate 
search match %in% require err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .cacheGenericTable .cacheGeneric .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.reStruct logLik recalc.reStruct recalc recalc.modelStruct recalc MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[.data.frame [[ model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
assign loadMethod loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
options match %in% getOption mvrnorm rand.eff.sim sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
$ residuals.lme resid standardGeneric resid summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getNamespace .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
substr data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sqrt solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized.pdMat isInitialized coef<-.pdMat coef<- coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
aperm.default aperm apply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
terms.formula terms standardGeneric terms sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
%in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
all.equal.character attr.all.equal all.equal.list all.equal attr.all.equal all.equal.numeric all.equal isSymmetric.matrix eigen lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
parent.frame tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
makepredictcall.default makepredictcall model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
isInitialized.pdMat FUN lapply unlist reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
%in% structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pmax do.call MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
array asMethod as as.matrix.Matrix as.matrix data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% require err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
substr .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match.fun sapply model.frame.default model.frame standardGeneric model.frame model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.data.frame.matrix as.data.frame data.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t chol pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lapply sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
dim as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique factor split.default split lapply tapply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ residuals.lme resid standardGeneric resid summary.lme summary sim.pow.nested FUN lapply sapply replicate 
.getMethodsTable as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.pdMat coef<- solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
aperm.default aperm apply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t.default t solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
[[.data.frame [[ na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t chol pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.vector as.data.frame.matrix as.data.frame data.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClass asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.data.frame as.list lapply sapply model.matrix.default model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat isInitialized Dim.pdNatural Dim pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diff.default diff FUN lapply MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
apply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.default as.matrix solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
%in% [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diff.default diff MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist simplify2array sapply diag solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
chol pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.cacheGenericTable .cacheGeneric .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lapply unlist apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdFactor.pdNatural pdFactor array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval eval formula.pdMat formula pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated.default anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.cacheGenericTable .cacheGeneric .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdFactor.pdLogChol FUN lapply unlist pdFactor.reStruct pdFactor unlist MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Names pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
tabulate array table getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.reStruct logLik recalc.reStruct recalc recalc.modelStruct recalc MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
is.data.frame colnames<- sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
assign loadMethod loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated.default anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diff.default diff MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.name getNamespace .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist unlist array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
asNamespace get ::: match.fun lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.vector coef.pdMat NextMethod coef.pdSymm FUN lapply unlist coef.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
na.omit.data.frame na.omit model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
unlist unique simplify2array sapply model.frame.default model.frame standardGeneric model.frame model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rownames<- lme.formula lme sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
factor as.factor FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sys.call match %in% [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pmatch .deparseOpts deparse eval match.arg sort.list factor as.factor tapply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
stopifnot srcfilecopy parse eval asOneFormula lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diff FUN lapply MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.vector as.data.frame.matrix as.data.frame data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sim.pow.nested FUN lapply sapply replicate 
tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array MEdecomp lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Dim.pdNatural Dim pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
apply MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
all.equal isSymmetric.matrix eigen lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.class1 FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ifelse solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[.data.frame [[ diff MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pmatch .deparseOpts deparse paste force as.data.frame.numeric as.data.frame data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized coef<-.pdMat coef<- solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
colnames solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.vector model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Dim pdMatrix.pdSymm pdMatrix crossprod pdMatrix.pdMat NextMethod pdMatrix.pdSymm pdMatrix as.matrix.pdMat as.matrix pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdNatural lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist unique simplify2array sapply model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix summary.lme summary sim.pow.nested FUN lapply sapply replicate 
as.list.default as.list as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
is.qr solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
options getOption model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rnorm matrix mvrnorm matrix err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
assign loadMethod loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
force factor unique.default unique factor [.factor [ FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
get match.fun outer as.vector matrix MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
deparse paste force as.data.frame.numeric as.data.frame data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ifelse solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric as as.matrix.Matrix as.matrix data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
lapply sapply model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique simplify2array sapply diag solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag varcov.randeff rand.eff.sim sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdMatrix.pdSymm pdMatrix lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply unlist .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
names factor [.factor [ FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdFactor.pdNatural FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
%in% .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
formula allVarsRec unique asOneFormula lme.formula lme sim.pow.nested FUN lapply sapply replicate 
split.default split getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
asOneSidedFormula Names pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdConstruct matrix<-.pdMat matrix<- FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
tabulate array table getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along match [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getClassDef is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is.data.frame model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rev.default rev getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.character.factor FUN FUN lapply unlist array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<- coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sys.call match %in% [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match.fun lapply unlist unique simplify2array sapply lmeStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rev MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
c match %in% deparse mode match %in% deparse paste force as.data.frame.numeric as.data.frame data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
.quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getNamespace .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
getNamespace .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
double pdFactor.pdNatural pdFactor array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat isInitialized Dim.pdNatural Dim pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized Dim.pdNatural Dim pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array diag varcov.randeff rand.eff.sim sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array tapply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
dim as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
unique.default unique pdMat FUN lapply reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist apply MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Names pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
el elNamed checkSlotAssignment slot<- @<- .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match.fun lapply unlist unique simplify2array sapply model.frame.default model.frame standardGeneric model.frame model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.deparseOpts deparse paste FUN lapply sapply model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getNamespace .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
terms.formula terms model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
NextMethod coef.pdSymm FUN lapply unlist coef.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdFactor.pdNatural FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique simplify2array sapply diag solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[<- solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
$<-.data.frame $<- sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
deparse paste FUN lapply sapply model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.class1 as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
<Anonymous> model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated as.data.frame.numeric as.data.frame data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length pdFactor.pdNatural FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
row.names as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along match [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.vector as.data.frame.matrix as.data.frame data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is.array model.frame.default model.frame standardGeneric model.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdNatural lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .getMethodsTable FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match.fun lapply unlist unique simplify2array sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
assign loadMethod loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.list formula.reStruct formula model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length length pdFactor.pdNatural FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
vapply list.names table getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t qr solve.pdLogChol FUN lapply solve.reStruct solve lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.vector as.data.frame.matrix as.data.frame data.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
all.equal isSymmetric.matrix eigen lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is .findMethodInTable .quickCoerceSelect as as.matrix.Matrix as.matrix data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is.factor unique.default unique simplify2array sapply match model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
is.factor quantile.default quantile summary.lme summary sim.pow.nested FUN lapply sapply replicate 
.cacheGenericTable .cacheGeneric .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diff.default diff pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
terms.formula terms standardGeneric terms sim.pow.nested FUN lapply sapply replicate 
model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length data.frame data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
mode do.call asOneSidedFormula splitFormula splitFormula getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.pdMat coef<- coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.default as.list as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
$<-.data.frame $<- sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
$<-.data.frame $<- sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
$<-.data.frame $<- sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
$<-.data.frame $<- sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
$<-.data.frame $<- sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
%in% [[.data.frame [[ na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat isInitialized coef<-.pdMat coef<- solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.cacheGenericTable .cacheGeneric .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
parent.frame tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length length pdFactor.pdNatural pdFactor array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sys.call match %in% [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist simplify2array sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEdecomp lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized coef<-.pdMat coef<- coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated.default anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ lme.formula lme sim.pow.nested FUN lapply sapply replicate 
matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
formula getGroupsFormula.default getGroupsFormula getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.character.factor as.character unique matrix MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
terms.formula terms standardGeneric terms sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.cacheGenericTable .cacheGeneric .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix matrix<-.pdMat matrix<- FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length dim.data.frame dim ncol eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized Names<-.pdMat Names<- Names<-.reStruct Names<- lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
double FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
exists .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.double pdFactor.pdNatural FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN lapply unlist coef.reStruct FUN lapply unlist coef.modelStruct coef lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getNamespace .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length length Dim.pdSymm Dim pdMatrix.pdSymm pdMatrix solve t qr solve.pdLogChol FUN lapply solve.reStruct solve lme.formula lme sim.pow.nested FUN lapply sapply replicate 
+ sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.reStruct logLik recalc.reStruct recalc recalc.modelStruct recalc MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.data.frame as.list lapply sapply model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getClassDef is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
AIC.logLik AIC standardGeneric AIC summary.lme summary sim.pow.nested FUN lapply sapply replicate 
is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdFactor.pdNatural FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
dim ncol eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match.fun lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lapply unique unlist array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
deparse mode match %in% deparse data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
.identC as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.vector coef.pdMat NextMethod coef.pdSymm FUN lapply unlist coef.reStruct FUN lapply unlist coef.modelStruct coef logLik.lme logLik summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getClass asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.identC is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ deparse mode asOneSidedFormula Names pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[<- coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
try ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
<Anonymous> [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
length lme.formula lme sim.pow.nested FUN lapply sapply replicate 
model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
options match %in% getOption mvrnorm matrix err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
lapply unlist .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
<Anonymous> model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pmatch .deparseOpts deparse eval match.arg residuals.lme resid standardGeneric resid summary.lme summary sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .cacheGenericTable .cacheGeneric .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
<Anonymous> [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure unlist array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length length pdFactor.pdNatural FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
standardGeneric model.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ifelse solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
aperm.default aperm apply split lapply Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat isInitialized pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.data.frame as.list lapply unique unlist array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.data.frame as.list lapply unique unlist array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.data.frame as.list lapply unique unlist array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.data.frame as.list lapply unique unlist array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized.pdMat isInitialized coef<-.pdMat coef<- coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sys.call match %in% [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
isS4 is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist array MEdecomp lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.default as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClass asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.deparseOpts deparse eval match.arg lmeControl lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ifelse solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getwd srcfilecopy parse eval formula formula.character formula as.formula reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lapply unlist unique simplify2array sapply model.matrix.default model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array diag solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
terms.formula terms standardGeneric terms sim.pow.nested FUN lapply sapply replicate 
as.list.data.frame as.list lapply lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
all.equal isSymmetric.matrix eigen lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
getNamespace .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<- coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.class1 FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated.default anyDuplicated as.data.frame.numeric as.data.frame data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .getMethodsTable FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist coef.modelStruct coef logLik.lme logLik summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
paste FUN vapply blank.chars formatC paste quantile.default quantile summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix summary.lme summary sim.pow.nested FUN lapply sapply replicate 
possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
all.equal.numeric all.equal all.equal.list all.equal attr.all.equal all.equal.numeric all.equal isSymmetric.matrix eigen lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef.modelStruct coef lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist pdFactor.reStruct pdFactor logLik.reStruct logLik recalc.reStruct recalc recalc.modelStruct recalc MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
NextMethod [.factor [ FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
is.data.frame model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
factor unique.default unique factor [.factor [ FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getNamespace .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
deparse mode match %in% deparse paste force as.data.frame.numeric as.data.frame data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
quantile.default quantile summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match.fun lapply unlist unique simplify2array sapply diag solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
dim nrow MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.cacheGenericTable .cacheGeneric .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
terms.formula terms standardGeneric terms sim.pow.nested FUN lapply sapply replicate 
makepredictcall model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rownames solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
data.frame data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is asMethod as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length na.omit.data.frame na.omit model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.name getNamespace .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse eval match.arg sort.list factor [.factor [ FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sort.int sort.default sort quantile.default quantile summary.lme summary sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along match [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names coef<-.modelStruct coef<- lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% deparse mode match %in% deparse paste force as.data.frame.numeric as.data.frame data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
.quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ncol solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.cacheGenericTable .cacheGeneric .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ FUN lapply unlist needUpdate.modelStruct needUpdate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClass asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
lapply unlist .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist data.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
packageSlot .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Names pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist unique simplify2array sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .getMethodsTable FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .getMethodsTable FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdFactor.pdNatural pdFactor array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
stopifnot srcfilecopy parse eval formula formula.character formula as.formula lme sim.pow.nested FUN lapply sapply replicate 
na.omit model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
matrix mvrnorm matrix err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
assign loadMethod loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
terms model.frame.default model.frame standardGeneric model.frame model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique simplify2array sapply model.matrix.default model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
<Anonymous> [[.data.frame [[ [.data.frame [ lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.factor [ [.data.frame [ lme.formula lme sim.pow.nested FUN lapply sapply replicate 
na.omit model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
get .getMethodsTable as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
$<-.data.frame $<- sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
$<-.data.frame $<- sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
$<-.data.frame $<- sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
$<-.data.frame $<- sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .getMethodsTable FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
table getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
na.omit.data.frame na.omit model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
<Anonymous> [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ifelse solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.row_names_info dim.data.frame dim as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
factor as.factor tapply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lme.formula lme sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length length pdFactor.pdNatural pdFactor array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClass asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
do.call solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getGroupsFormula reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
loadMethod loadMethod standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.cacheGenericTable .cacheGeneric .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
[[.data.frame [[ model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<- solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique.default unique factor split.default split lapply Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.pdMat coef<- solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sys.call match %in% [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
table getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdFactor.pdNatural pdFactor array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
sapply lmeStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.deparseOpts FUN lapply sapply match model.matrix.default model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.double pdFactor.pdNatural pdFactor array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match.fun lapply unlist unique simplify2array sapply model.frame.default model.frame standardGeneric model.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdConstruct.pdNatural pdConstruct pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdNatural lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
order do.call order lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rev MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq quantile.default quantile summary.lme summary sim.pow.nested FUN lapply sapply replicate 
as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdFactor.pdNatural pdFactor array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lapply sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lapply unlist getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length length pdFactor.pdNatural pdFactor array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
%in% [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.cacheGenericTable .cacheGeneric .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along match [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<- coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
parent.frame tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Names pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.row_names_info dim.data.frame dim as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.name getNamespace .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique simplify2array sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply as.list formula.reStruct FUN lapply formula.modelStruct formula allVarsRec unique asOneFormula lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diff MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix eigen mvrnorm matrix err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique simplify2array sapply diag solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along match [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
makepredictcall model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat isInitialized coef<-.pdMat coef<- coef<-.reStruct coef<- coef<-.modelStruct coef<- lme.formula lme sim.pow.nested FUN lapply sapply replicate 
simplify2array sapply diag solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
exists .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t.default t solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length length pdFactor.pdNatural FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length dim.data.frame dim ncol eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ifelse solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
simplify2array sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Names FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ifelse solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
formals match.arg sort.list factor split.default split lapply tapply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
colnames<- solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
fitted.lmeStruct fitted lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eigen mvrnorm matrix err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.deparseOpts deparse FUN lapply unlist getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names [.data.frame [ unique matrix MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.default as.matrix eigen mvrnorm rand.eff.sim sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.reStruct logLik recalc.reStruct recalc recalc.modelStruct recalc MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
paste FUN lapply unlist sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
cbind do.call cbind fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.cacheGeneric .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
chol pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
data.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
aperm.default aperm apply split lapply Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[<-.data.frame [<- summary.lme summary sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Dim pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list lapply unlist array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat isInitialized coef<-.pdMat coef<- solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.vector as.data.frame.matrix as.data.frame data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
eval model.frame.default model.frame standardGeneric model.frame model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat isInitialized coef<-.pdMat coef<- solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
options getOption model.frame.default model.frame standardGeneric model.frame model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.cacheGenericTable .cacheGeneric .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
double FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat isInitialized FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.vector as.data.frame.matrix as.data.frame data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sort.int sort.default sort quantile.default quantile summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
get match.fun outer Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
terms model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv %*% %*% %*% as.matrix data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
unlist matrix model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.reStruct logLik recalc.reStruct recalc recalc.modelStruct recalc MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% deparse paste FUN lapply sapply model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.deparseOpts deparse mode match %in% deparse paste force as.data.frame.numeric as.data.frame data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.default as.list lapply unlist needUpdate.modelStruct needUpdate Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat isInitialized coef<-.pdMat coef<- solve.pdLogChol FUN lapply solve.reStruct solve lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef logLik.lme logLik summary.lme summary sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
== eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.row_names_info as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
unlist data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ FUN lapply unlist needUpdate.modelStruct needUpdate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ncol eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
environment exists .getMethodsTable FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
needUpdate Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated.default anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list lapply sapply model.matrix.default model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
- pdFactor.pdNatural pdFactor array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.name getNamespace .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.cacheGeneric .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
stopifnot srcfilecopy parse eval asOneFormula model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
apply split lapply Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
apply split lapply Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
apply split lapply Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
apply split lapply Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Dim.pdNatural Dim pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
data.class pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[.data.frame [[ model.matrix.default model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste paste parse eval getGroupsFormula.reStruct getGroupsFormula lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist matrix model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
na.omit.data.frame na.omit model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.double pdFactor.pdNatural pdFactor array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
row.names as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
unlist matrix model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
nrow La.svd svd pdMatrix.pdSymm pdMatrix crossprod pdMatrix.pdMat NextMethod pdMatrix.pdSymm pdMatrix as.matrix.pdMat as.matrix pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdNatural lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN lapply unlist unique simplify2array sapply model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
environment doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist coef.modelStruct coef nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique simplify2array sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.row_names_info dim.data.frame dim as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rnorm matrix mvrnorm matrix err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.classEnv as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
factor as.factor FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ Names matrix MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
mvrnorm matrix err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sapply diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels.default levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique factor getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match.call stopifnot srcfilecopy parse eval getGroupsFormula.reStruct getGroupsFormula lme.formula lme sim.pow.nested FUN lapply sapply replicate 
mode match %in% FUN lapply sapply match model.matrix.default model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
get .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist array MEdecomp lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ifelse solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[<- coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Names pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
outer Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ifelse solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
lme sim.pow.nested FUN lapply sapply replicate 
match %in% [[.data.frame [[ na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized coef<-.pdMat coef<- coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lapply unlist unique simplify2array sapply model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
assign loadMethod loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.deparseOpts deparse eval match.arg sort.list factor [.factor [ FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
options match %in% getOption mvrnorm matrix err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
sys.parent sys.call match.call stopifnot srcfilecopy parse eval asOneFormula model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.data.frame as.list lapply sapply model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
dim ncol eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
assign loadMethod loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
anyDuplicated.default anyDuplicated [.data.frame [ na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
make.names data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
isInitialized.pdMat isInitialized Names<-.pdMat Names<- Names<-.reStruct Names<- lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply unlist .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
[[.data.frame [[ [.data.frame [ lme.formula lme sim.pow.nested FUN lapply sapply replicate 
fitted.lmeStruct fitted lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated.default anyDuplicated data.row.names data.frame data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
paste quantile.default quantile summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
isS4 is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
== eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.integer xtfrm.factor xtfrm FUN lapply order lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat isInitialized pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
eval eval match.arg lme.formula lme sim.pow.nested FUN lapply sapply replicate 
is.factor unique.default unique simplify2array sapply model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
is.factor FUN lapply sapply model.matrix.default model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
is.factor split.default split lapply tapply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
options match %in% getOption mvrnorm rand.eff.sim sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
summary.lme summary sim.pow.nested FUN lapply sapply replicate 
.findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
terms.formula terms model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
terms.formula terms standardGeneric terms sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .getMethodsTable as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
terms.formula terms model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
%in% .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.reStruct logLik recalc.reStruct recalc recalc.modelStruct recalc MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
assign loadMethod loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sapply diag solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length dim.data.frame dim as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
simplify2array sapply diag solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
tapply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rownames solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
lmeStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.row_names_info dim.data.frame dim ncol eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ na.omit.data.frame na.omit model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getMethodsTable as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
%in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
structure .POSIXct Sys.time srcfilecopy parse eval getGroupsFormula.reStruct getGroupsFormula lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist simplify2array sapply model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
NextMethod [.factor [ [.data.frame [ lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.data.frame.numeric as.data.frame data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.cacheGenericTable .cacheGeneric .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
$ summary.lme summary sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist needUpdate.modelStruct needUpdate Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
parent.frame tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
parse eval asOneFormula lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as as.matrix.Matrix as.matrix data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.character.factor as.character factor [.factor [ FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
options match %in% getOption mvrnorm rand.eff.sim sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
$ fixef.lme fixef summary.lme summary sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match.fun lapply unlist coef.reStruct FUN lapply unlist coef.modelStruct coef nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClass asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdFactor.pdNatural FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
dim as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match structure .POSIXct Sys.time srcfilecopy parse eval asOneFormula lme.formula lme sim.pow.nested FUN lapply sapply replicate 
is.ordered FUN lapply sapply model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list lapply sapply model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
unlist matrix model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ FUN lapply unlist pdFactor.reStruct pdFactor unlist MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated data.row.names data.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized matrix<-.pdMat matrix<- MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.default solve lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix solve.default solve lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
environment exists .getMethodsTable as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
anyDuplicated.default anyDuplicated [.data.frame [ na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length dim.data.frame dim as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list lapply unlist coef.modelStruct coef logLik.lme logLik summary.lme summary sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
is.data.frame colnames solve.default solve lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist unique simplify2array sapply model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lme.formula lme sim.pow.nested FUN lapply sapply replicate 
mode match %in% deparse mode match %in% deparse data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels.default levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array MEdecomp lme.formula lme sim.pow.nested FUN lapply sapply replicate 
fitted.lmeStruct fitted lme.formula lme sim.pow.nested FUN lapply sapply replicate 
terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadMethod loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
factor unique.default unique factor [.factor [ FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ncol getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match possibleExtends is asMethod as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rep.int mvrnorm rand.eff.sim sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getClassDef is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match.fun vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match factor unique.default unique factor [.factor [ FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.reStruct logLik recalc.reStruct recalc recalc.modelStruct recalc MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sys.call match %in% [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
chol pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
summary.lme summary sim.pow.nested FUN lapply sapply replicate 
summary.lme summary sim.pow.nested FUN lapply sapply replicate 
summary.lme summary sim.pow.nested FUN lapply sapply replicate 
summary.lme summary sim.pow.nested FUN lapply sapply replicate 
options match %in% getOption mvrnorm matrix err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
assign loadMethod loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is.factor FUN lapply sapply model.frame.default model.frame standardGeneric model.frame model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.pdMat coef<- solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getClass asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
c match.arg sort.list factor table getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match.fun sapply lmeStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rev array MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat isInitialized coef<-.pdMat coef<- solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
split lapply Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
== eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
split lapply Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.double pdFactor.pdNatural FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getClassDef is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
split lapply Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
split getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat isInitialized solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match FUN lapply unlist getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat isInitialized solve.pdLogChol FUN lapply solve.reStruct solve lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t mvrnorm matrix err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
mode match %in% deparse mode match %in% deparse paste force as.data.frame.factor as.data.frame data.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
fitted.lmeStruct fitted lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
levels as.vector factor [.factor [ FUN lapply getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
qr solve.pdLogChol FUN lapply solve.reStruct solve lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
[[ deparse FUN lapply unlist getGroups.data.frame getGroups lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
levels as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
Names FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
$<-.data.frame $<- sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% [[.data.frame [[ na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.name getNamespace .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
anyDuplicated.default anyDuplicated data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply sapply model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list lapply unlist coef.reStruct FUN lapply unlist coef.modelStruct coef lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
seq_along structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
unlist data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
sys.call match %in% [[.data.frame [[ [.data.frame [ na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
fitted.lmeStruct fitted lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rnorm matrix mvrnorm matrix err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
c pmatch .deparseOpts deparse paste FUN lapply sapply model.frame.default model.frame standardGeneric model.frame model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
formula pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct matrix<-.pdMat matrix<- Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sys.call match %in% [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
%in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getGroupsFormula.default getGroupsFormula reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% [[.data.frame [[ model.matrix.default model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list data.frame data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.list lapply sapply model.frame.default model.frame standardGeneric model.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list lapply unlist coef.modelStruct coef lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.default as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.vector as.data.frame.matrix as.data.frame data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
.getMethodsTable as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
%in% .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist unique simplify2array sapply model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.double pdFactor.pdLogChol pdFactor array pdMatrix.pdSymm pdMatrix solve t qr solve.pdLogChol FUN lapply solve.reStruct solve lme.formula lme sim.pow.nested FUN lapply sapply replicate 
terms standardGeneric terms sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<- solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[<-.data.frame [<- summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length length solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
colnames<- solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist array getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
Names Names<-.pdMat Names<- Names<-.reStruct Names<- lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rownames<- lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique.default unique simplify2array sapply model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
get .cacheGenericTable .cacheGeneric .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
make.unique make.names data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply unlist .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse paste FUN lapply sapply model.frame.default model.frame standardGeneric model.frame model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix qr.default qr solve.pdLogChol FUN lapply solve.reStruct solve lme.formula lme sim.pow.nested FUN lapply sapply replicate 
options match %in% getOption mvrnorm rand.eff.sim sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getClass asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .getMethodsTable FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eigen lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getMethodsTable FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ coef<-.reStruct coef<- coef<-.modelStruct coef<- lme.formula lme sim.pow.nested FUN lapply sapply replicate 
na.omit.data.frame na.omit model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated.default anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
doTryCatch tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdFactor.pdNatural FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
getOption model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
%in% as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
isS4 is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique simplify2array sapply diag solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.sigLabel .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<- solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ isInitialized FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
length data.frame sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
lapply unlist unique simplify2array sapply model.frame.default model.frame standardGeneric model.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rev MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[ FUN lapply unlist coef.modelStruct coef logLik.lme logLik summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.sigLabel .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
colnames<- solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sort.list factor split.default split lapply Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
double pdFactor.pdNatural FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array MEdecomp lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .cacheGenericTable .cacheGeneric .getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist array MEdecomp lme.formula lme sim.pow.nested FUN lapply sapply replicate 
diag pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length length pdFactor.pdNatural FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
packageSlot .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
%in% structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
assign loadMethod loadMethod %*% %*% as.matrix data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
unlist data.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
options match %in% getOption mvrnorm rand.eff.sim sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.list as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
getFixDF lme.formula lme sim.pow.nested FUN lapply sapply replicate 
isInitialized.pdMat isInitialized coef<-.pdMat coef<- solve.pdLogChol FUN lapply solve.reStruct solve lme.formula lme sim.pow.nested FUN lapply sapply replicate 
terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC possibleExtends is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
array MEdims lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length pdConstruct.pdNatural pdConstruct pdNatural lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated.default anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse mode asOneSidedFormula Names pdConstruct.pdMat pdConstruct.pdLogChol pdConstruct pdMat FUN lapply reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix svd pdMatrix.pdSymm pdMatrix crossprod pdMatrix.pdMat NextMethod pdMatrix.pdSymm pdMatrix lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
structure [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.list getGroupsFormula.default getGroupsFormula reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist simplify2array sapply model.matrix.default model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
matrix La.svd svd pdMatrix.pdSymm pdMatrix solve t qr solve.pdLogChol FUN lapply solve.reStruct solve lme.formula lme sim.pow.nested FUN lapply sapply replicate 
options match %in% getOption mvrnorm matrix err.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.data.frame.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length isInitialized.pdMat isInitialized FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lapply sapply model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist array MEdecomp lme.formula lme sim.pow.nested FUN lapply sapply replicate 
rownames<- lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.vector as.data.frame.matrix as.data.frame data.frame data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadedNamespaces match %in% .requirePackage .classEnv asMethod as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
names model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
deparse paste FUN lapply sapply model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
loadMethod dim FUN vapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
data.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
terms.formula terms standardGeneric terms sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClassDef is .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
parent.frame eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
sapply lmeStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.deparseOpts FUN lapply sapply match model.matrix.default model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length coef<-.pdMat coef<- solve.pdLogChol FUN lapply solve.reStruct solve lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated.default anyDuplicated data.frame data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
lapply unlist .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
deparse paste force as.data.frame.numeric as.data.frame data.frame summary.lme summary sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClass asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.name getNamespace .requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
double pdFactor.pdNatural FUN lapply unlist pdFactor.reStruct pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClass asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length dim.data.frame dim ncol model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
%in% .getGeneric getGeneric as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
parse eval formula formula.character formula as.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.vector as.data.frame.matrix as.data.frame data.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
possibleExtends is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
anyDuplicated [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
isS4 is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEestimate lme.formula lme sim.pow.nested FUN lapply sapply replicate 
model.frame model.matrix.default model.matrix standardGeneric model.matrix sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
parent.frame tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
match asOneFormula lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame terms.formula terms model.matrix.default model.matrix standardGeneric model.matrix as.data.frame form2list FUN lapply as.list model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
paste .sigLabel .findMethodInTable .quickCoerceSelect as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.identC is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
residuals.lme resid standardGeneric resid summary.lme summary sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
getClassDef is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.row_names_info dim.data.frame dim as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
t svd pdMatrix.pdSymm pdMatrix crossprod pdMatrix.pdMat NextMethod pdMatrix.pdSymm pdMatrix as.matrix.pdMat as.matrix pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdConstruct.pdMat pdConstruct.pdNatural pdConstruct pdNatural lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% [[.data.frame [[ na.omit.data.frame na.omit model.frame.default model.frame model.matrix.default model.matrix standardGeneric model.matrix fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClass asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eigen lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
packageSlot .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist array MEdecomp lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
array asMethod as as.matrix.Matrix as.matrix data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
fixef.sim.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
exists .getMethodsTable as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unique simplify2array sapply diag solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.default as.list lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
packageSlot .classEnv as as.matrix.Matrix as.matrix data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
unlist matrix model.matrix.reStruct model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match %in% [[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
$<-.data.frame $<- sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
$<-.data.frame $<- sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
$<-.data.frame $<- sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
$<-.data.frame $<- sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
NextMethod coef.pdSymm coef FUN lapply unlist Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
is.data.frame colnames<- solve.default solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
eval eval subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[[.data.frame [[ [.data.frame [ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[ subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
tryCatchOne tryCatchList tryCatch try ls loadedNamespaces match %in% .requirePackage .classEnv asMethod FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.row_names_info dim.data.frame dim as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.requirePackage .classEnv FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
coef<-.reStruct coef<- coef<-.modelStruct coef<- FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getGeneric getGeneric FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.list.default as.list lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
names subset.data.frame subset as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
as.list getGroupsFormula.default getGroupsFormula reStruct lme.formula lme sim.pow.nested FUN lapply sapply replicate 
sys.call match %in% [[.data.frame [[ model.matrix.default model.matrix standardGeneric model.matrix lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
match.call stopifnot .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.class1 FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
as.double pdFactor.pdNatural pdFactor array pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
ls loadedNamespaces match %in% .requirePackage .classEnv as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
is .findMethodInTable .quickCoerceSelect FUN lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse model.frame.default model.frame standardGeneric model.frame do.call lme.formula lme sim.pow.nested FUN lapply sapply replicate 
MEEM Initialize.reStruct FUN lapply Initialize.lmeStruct Initialize lme.formula lme sim.pow.nested FUN lapply sapply replicate 
NextMethod coef.pdNatural FUN lapply unlist coef.reStruct FUN lapply unlist coef.modelStruct coef lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
.row_names_info dim.data.frame dim as.matrix.data.frame as.matrix FUN lapply data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
.getClassFromCache getClass asMethod as FUN lapply lapply .bdiag .class1 as bdiag data.reg.nested sim.reg.nested sim.pow.nested FUN lapply sapply replicate 
deparse eval match.arg lmeControl lme.formula lme sim.pow.nested FUN lapply sapply replicate 
[.data.frame [ na.omit.data.frame na.omit model.frame.default model.frame standardGeneric model.frame lme.formula lme sim.pow.nested FUN lapply sapply replicate 
logLik.lmeStructInt logLik objective nlminb lme.formula lme sim.pow.nested FUN lapply sapply replicate 
length length Dim.pdNatural Dim pdMatrix.pdNatural pdMatrix solve solve.pdNatural FUN lapply solve.reStruct solve pdFactor unlist FUN apply solve.default solve fdHess lmeApVar lme.formula lme sim.pow.nested FUN lapply sapply replicate 
